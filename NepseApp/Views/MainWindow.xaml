<mde:MaterialWindow 
    x:Class="NepseApp.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Height="640" Width="960" 
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Background="{DynamicResource MaterialDesignPaper}"
    TextElement.FontWeight="Medium"
    TextElement.FontSize="10"
    xmlns:mde="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions" 
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
    WindowStartupLocation="CenterScreen"
    MinWidth="1000" MinHeight="640"
    Title="{Binding Title}"
    xmlns:const="clr-namespace:NepseClient.Commons.Constants;assembly=NepseClient.Commons">
    <Window.InputBindings>
        <KeyBinding Key="F5" Command="{Binding ApplicationCommand.RefreshCommand}" />
    </Window.InputBindings>
    <mde:MaterialWindow.TitleTemplate>
        <DataTemplate>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource WindowTitleTextBlockStyle}" Text="{Binding DataContext.Title, RelativeSource={RelativeSource AncestorType={x:Type mde:MaterialWindow}}}" Margin="8,0,0,0" />
                <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Stretch">
                    <TextBlock Style="{StaticResource WindowTitleTextBlockStyle}" Text="{Binding DataContext.Message, RelativeSource={RelativeSource AncestorType={x:Type mde:MaterialWindow}}}" />
                    <Button Style="{StaticResource WindowButtonStyle}" 
                            Command="{Binding DataContext.ApplicationCommand.RefreshCommand, RelativeSource={RelativeSource AncestorType={x:Type mde:MaterialWindow}}}">
                        <md:PackIcon Style="{StaticResource WindowButtonIconStyle}" Kind="Refresh" />
                    </Button>
                    <Border Width="1" VerticalAlignment="Stretch" SnapsToDevicePixels="True" Margin="8,4,8,4"
                            Background="{Binding Path=BorderForegroundBrush, RelativeSource={RelativeSource AncestorType={x:Type mde:MaterialWindow}}}" />
                </StackPanel>
            </Grid>
        </DataTemplate>
    </mde:MaterialWindow.TitleTemplate>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0" Grid.ColumnSpan="3" IsMainMenu="True">
            <MenuItem Header="File" />
            <MenuItem Header="Edit" />
            <MenuItem Header="View" >
                <MenuItem Header="Refresh" Icon="{md:PackIcon Kind=Refresh}" Command="{Binding ApplicationCommand.RefreshCommand}" InputGestureText="F5"/>
                <Separator />
                <MenuItem Header="Show Notices" IsCheckable="True" IsChecked="{Binding ShowNotices}"/>
                <MenuItem Header="Show Floorsheets" IsCheckable="True" IsChecked="{Binding ShowFloorsheets}"/>
                <Separator/>
                <MenuItem x:Name="StockMenu" Header="Stocks" IsCheckable="True" IsChecked="True" Checked="MenuItem_Checked" 
                          Command="{Binding UpdateSideNavViewCommand}" 
                          CommandParameter="StocksNavPage"/>
                <MenuItem x:Name="TmsMenu" Header="TMS" IsCheckable="True" Checked="MenuItem_Checked" 
                          Command="{Binding UpdateSideNavViewCommand}" 
                          CommandParameter="TmsNavPage"/>
                <MenuItem x:Name="MeroShareMenu" Header="MeroShare" IsCheckable="True" Checked="MenuItem_Checked" 
                          Command="{Binding UpdateSideNavViewCommand}" 
                          CommandParameter="MeroShareNavPage"/>

            </MenuItem>
            <MenuItem Header="TMS">
                <MenuItem Header="Update Base URL" Command="{Binding UpdateTmsBaseUrl}" Icon="{md:PackIcon Kind=Web}" />
                <MenuItem Header="Log In" Command="{Binding TmsLogInCommand}" 
                          Icon="{md:PackIcon Kind=Login}" 
                          Visibility="{Binding IsTmsLoggedIn, Converter={StaticResource InvertBooleanToVisibilityConverter}}"/>
                <MenuItem Header="Log Out" Command="{Binding TmsLogOutCommand}" 
                          Icon="{md:PackIcon Kind=Logout}"
                          Visibility="{Binding IsTmsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </MenuItem>
            <MenuItem Header="MeroShare">
                <MenuItem Header="Update Client Id" Command="{Binding UpdateMeroShareClientId}" Icon="{md:PackIcon Kind=Person}" />
                <MenuItem Header="Log In" Command="{Binding MeroShareLogInCommand}" 
                          Icon="{md:PackIcon Kind=Login}" 
                          Visibility="{Binding IsMeroShareLoggedIn, Converter={StaticResource InvertBooleanToVisibilityConverter}}"/>
                <MenuItem Header="Log Out" Command="{Binding MeroShareLogOutCommand}" 
                          Icon="{md:PackIcon Kind=Logout}"
                          Visibility="{Binding IsMeroShareLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <MenuItem Header="Import my portfolio as watchlist" 
                          Icon="{md:PackIcon Kind=Import}"
                          Command="{Binding ImportPortfolioCommand}"
                          Visibility="{Binding IsMeroShareLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Separator />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" />
            </MenuItem>
        </Menu>

        <ContentControl Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" prism:RegionManager.RegionName="{x:Static const:RegionNames.SideNavRegion}" />
        <GridSplitter Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Width="8" ResizeBehavior="PreviousAndNext" />

        <ContentControl Grid.Row="1" Grid.Column="2" prism:RegionManager.RegionName="{x:Static const:RegionNames.ContentRegion}" />

        <md:Snackbar Grid.Row="2" Grid.Column="2" MessageQueue="{Binding MessageQueue}" />
    </Grid>
</mde:MaterialWindow>
